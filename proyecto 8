import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

# Cargar el dataset
df = pd.read_csv('/mnt/data/1740158691459-superstore.csv')

# Convertir columnas de fechas a datetime
df['Order Date'] = pd.to_datetime(df['Order Date'])
df['Ship Date'] = pd.to_datetime(df['Ship Date'])

# Crear columna YearMonth para análisis temporal
df['YearMonth'] = df['Order Date'].dt.to_period('M').astype(str)

df.head()

fig1 = px.bar(
    df.groupby('Category')['Sales'].sum().reset_index(),
    x='Category',
    y='Sales',
    title='Ventas Totales por Categoría',
    text='Sales'
)
fig1.update_traces(texttemplate='%{text:.2s}', textposition='outside')
fig1.update_layout(yaxis_title='Ventas Totales')
fig1.show()

sales_monthly = df.groupby('YearMonth')['Sales'].sum().reset_index()

fig2 = px.line(
    sales_monthly,
    x='YearMonth',
    y='Sales',
    title='Evolución de Ventas Mensuales',
    markers=True
)
fig2.update_layout(xaxis_title='Mes-Año', yaxis_title='Ventas Totales')
fig2.show()

sales_monthly['Moving_Avg_3'] = sales_monthly['Sales'].rolling(window=3).mean()

fig3 = go.Figure()
fig3.add_trace(go.Scatter(
    x=sales_monthly['YearMonth'], y=sales_monthly['Sales'],
    mode='lines+markers',
    name='Ventas Mensuales'
))
fig3.add_trace(go.Scatter(
    x=sales_monthly['YearMonth'], y=sales_monthly['Moving_Avg_3'],
    mode='lines',
    name='Media Móvil (3 meses)',
    line=dict(color='red', width=2)
))

fig3.update_layout(
    title='Evolución de Ventas Mensuales con Media Móvil (3 meses)',
    xaxis_title='Mes-Año',
    yaxis_title='Ventas Totales'
)
fig3.show()

fig4 = px.treemap(
    df,
    path=['Region', 'Category', 'Sub-Category'],
    values='Sales',
    title='Ventas por Región, Categoría y Subcategoría'
)
fig4.show()

fig5 = px.scatter(
    df,
    x='Sales',
    y='Profit',
    color='Discount',
    title='Relación entre Ventas y Ganancia (coloreado por Descuento)',
    color_continuous_scale='Viridis',
    labels={'Discount':'Descuento'}
)
fig5.show()

sales_state = df.groupby('State')['Sales'].sum().reset_index()

fig6 = px.choropleth(
    sales_state,
    locations='State',
    locationmode='USA-states',
    color='Sales',
    scope='usa',
    color_continuous_scale='Blues',
    title='Ventas Totales por Estado (USA)'
)
fig6.show()
